#include"mpi.h"
#include <stdio.h>
#include <stdlib.h>

void com(int A[4][2],int B[2][4],int C[4][4],int m,int kk,int n){
int i,j,k;
for(i = 0; i < m; i++) 
{ 
    for(j = 0; j < n; j++) 
        { 
            C[i][j] = 0; 
            for(k = 0; k < kk; k++)  
                { 
                    C[i][j] += A[i][k] * B[k][j]; 
                } 
        }
}

}
int main(int argc,char **argv) { 
  int myid, numprocs;
  int namelen,source;
  int A[4][2],B[2][4],C[4][4];
  B[0][0]=1;B[0][1]=3;B[0][2]=5;B[0][3]=7;
  B[1][0]=2;B[1][1]=4;B[1][2]=6;B[1][3]=8;
  A[0][0]=1;A[1][0]=3;A[2][0]=5;A[3][0]=7;
  A[0][1]=2;A[1][1]=4;A[2][1]=6;A[3][1]=8;
  
  MPI_Status status;
  MPI_Init(&argc,&argv);
  MPI_Comm_rank(MPI_COMM_WORLD,&myid);//得到当前进程的进程号
  MPI_Comm_size(MPI_COMM_WORLD,&numprocs);//得到通信域中的总进程数
 
  
if(myid==1){
	com(A,B,C,4,2,4);
   MPI_Send(C,16,MPI_INT,0,99,MPI_COMM_WORLD);
   }
   if(myid==0)
   {
	MPI_Recv(&C,16,MPI_INT,1,99,MPI_COMM_WORLD,&status);
	for(int i=0;i<4;i++){
	
		for(int j=0;j<4;j++){
			printf(" %d ",C[i][j]);
		}
		printf("\n");
	}
   }
  MPI_Finalize();
  return 0;
}
